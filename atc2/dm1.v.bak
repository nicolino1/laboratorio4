//creo el demultriplexor 1 para poder mandar los valores generados en el switch

module dm1 (in, Cin, out1,out2, out3, out4, out5, out6, out7, out8);

	input [7:0]in;
	input [2:0]Cin;
	output [7:0] out1;
	output [7:0] out2;
	output [7:0] out3;
	output [7:0] out4;
	output [7:0] out5;
	output [7:0] out6;
	output [7:0] out7;
	output [7:0] out8;
	
	reg [7:0] out1;
	reg [7:0] out2;
	reg [7:0] out3;
	reg [7:0] out4;
	reg [7:0] out5;
	reg [7:0] out6;
	reg [7:0] out7;
	reg [7:0] out8;
	
	always @(posedge Cin) //siempre "at" (flanco positivo..)
		begin
			switch(Cin){
			
			case 0:
			{
			  out1=in;
			  
			  //vuelvo la variables a 0 para no tener valores residuales
			  out2=0;
			  out3=0;
			  out4=0;
			  out5=0;
			  out6=0;
			  out7=0;
			  out8=0;
			 
			}break;
			
			case 1:
			{
			  out2=in;
			  out1=0;
			  out3=0;
			  out4=0;
			  out5=0;
			  out6=0;
			  out7=0;
			  out8=0;
			}break;
			
			case 2:
			{
			  out3=in;
			  out1=0;
			  out2=0;
			  out4=0;
			  out5=0;
			  out6=0;
			  out7=0;
			  out8=0;
			}break;
			case 3:
			{
			  out4=in;
			  out2=0;
			  out3=0;
			  out1=0;
			  out5=0;
			  out6=0;
			  out7=0;
			  out8=0;
			}break;
			case 4:
			{
			  out5=in;
			  out2=0;
			  out3=0;
			  out4=0;
			  out1=0;
			  out6=0;
			  out7=0;
			  out8=0;
			}break;
			case 5:
			{
			  out6=in;
			  out2=0;
			  out3=0;
			  out4=0;
			  out5=0;
			  out1=0;
			  out7=0;
			  out8=0;
			}break;
			case 6:
			{
			  out7=in;
			  out2=0;
			  out3=0;
			  out4=0;
			  out5=0;
			  out6=0;
			  out1=0;
			  out8=0;
			  
			}break;
			case 7:
			{
			  out8=in;
			  out2=0;
			  out3=0;
			  out4=0;
			  out5=0;
			  out6=0;
			  out7=0;
			  out1=0;
			}break;
			
			}
			
			
		end
		
endmodule